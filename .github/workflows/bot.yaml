name: Validate CaltechDATA Metadata Integrity
on:
  push:
    paths:
      - 'caltechdata_api/cli.py'
      - 'README.md'
  pull_request:
    paths:
      - 'caltechdata_api/cli.py'
      - 'README.md'

jobs:
  validate-metadata:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests s3fs cryptography caltechdata_api
        
    - name: Validate Critical Metadata Fields
      run: |
        # Validate Publisher
        if ! grep -q '"publisher": "CaltechDATA"' caltechdata_api/cli.py; then
          echo "Error: The publisher field must be present in cli.py with the value 'CaltechDATA'"
          exit 1
        fi
        
        # Validate Schema Version
        if ! grep -q '"schemaVersion": "http://datacite.org/schema/kernel-4"' caltechdata_api/cli.py; then
          echo "Error: The schemaVersion must be present with the value 'http://datacite.org/schema/kernel-4'"
          exit 1
        fi
        
        # Validate Resource Type Structure
        if ! grep -q '"types": {"resourceType": "", "resourceTypeGeneral": "Dataset"}' caltechdata_api/cli.py; then
          echo "Error: The types field must be present with empty resourceType and resourceTypeGeneral set to 'Dataset'"
          exit 1
        fi
        
        # Validate License Options
        license_options=$(grep -A10 'License options:' caltechdata_api/cli.py)
        if [[ ! "$license_options" =~ "Creative Commons Zero Waiver (cc-zero)" ]] || 
           [[ ! "$license_options" =~ "Creative Commons Attribution (cc-by)" ]] || 
           [[ ! "$license_options" =~ "Creative Commons Attribution Non Commercial (cc-by-nc)" ]]; then
          echo "Error: Required license options are missing"
          exit 1
        fi
        
        # Validate ORCID Handling
        if ! grep -q 'nameIdentifierScheme": "ORCID"' caltechdata_api/cli.py; then
          echo "Error: ORCID identifier scheme validation is missing"
          exit 1
        fi
        
        echo "All critical metadata field validations passed!"
    
    - name: Run Metadata Validation Test
      env:
        CALTECHDATA_TOKEN: ${{ secrets.CALTECHDATA_TOKEN }}
        TEST_ORCID: ${{ secrets.TEST_ORCID }}
      run: |
        python tests/bot_yaml.py
